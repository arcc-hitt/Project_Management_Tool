version: '3.8'

services:
  # Database
  mysql:
    image: mysql:8.0
    container_name: project-mgmt-db
    environment:
      MYSQL_ROOT_PASSWORD: root_password123
      MYSQL_DATABASE: project_management_tool
      MYSQL_USER: project_user
      MYSQL_PASSWORD: user_password123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/migrations:/docker-entrypoint-initdb.d
    networks:
      - project-mgmt-network
    command: --default-authentication-plugin=mysql_native_password

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: project-mgmt-backend
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: project_management_tool
      DB_USER: project_user
      DB_PASSWORD: user_password123
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      PORT: 5000
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - project-mgmt-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: project-mgmt-frontend
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - project-mgmt-network
    restart: unless-stopped

  # Redis for session storage and caching (optional)
  redis:
    image: redis:7-alpine
    container_name: project-mgmt-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - project-mgmt-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  project-mgmt-network:
    driver: bridge